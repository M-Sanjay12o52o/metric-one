// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  username String? @unique

  createdQuizzs Quizz[] @relation("CreatedBy")


  image     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  accounts  Account[]
  sessions  Session[]
  Questions Questions[]
  // Quizz         Quizz[]

  Subscription Subscription[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Quizz {
  id        String      @id @default(cuid())
  name      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  questions Questions[]

  creatorId   String?
  creator     User?          @relation("CreatedBy", fields: [creatorId], references: [id])
  subscribers Subscription[]

  @@index([name])
}

model Subscription {
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  quizz   Quizz  @relation(fields: [quizzId], references: [id])
  quizzId String

  @@id([userId, quizzId])
}

model Questions {
  id        String   @id @default(cuid())
  question  String
  options   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quizz     Quizz    @relation(fields: [quizzId], references: [id])
  quizzId   String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}
